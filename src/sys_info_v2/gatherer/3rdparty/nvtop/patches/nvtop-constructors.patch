diff --git a/src/extract_gpuinfo_amdgpu.c b/src/extract_gpuinfo_amdgpu.c
index d0ff539..5870d90 100644
--- a/src/extract_gpuinfo_amdgpu.c
+++ b/src/extract_gpuinfo_amdgpu.c
@@ -156,7 +156,7 @@ struct gpu_vendor gpu_vendor_amdgpu = {
 
 static int readAttributeFromDevice(nvtop_device *dev, const char *sysAttr, const char *format, ...);
 
-__attribute__((constructor)) static void init_extract_gpuinfo_amdgpu(void) { register_gpu_vendor(&gpu_vendor_amdgpu); }
+void init_extract_gpuinfo_amdgpu(void) { register_gpu_vendor(&gpu_vendor_amdgpu); }
 
 static int wrap_drmGetDevices(drmDevicePtr devices[], int max_devices) {
   assert(_drmGetDevices2 || _drmGetDevices);
diff --git a/src/extract_gpuinfo_intel.c b/src/extract_gpuinfo_intel.c
index cb4a9e6..b6be683 100644
--- a/src/extract_gpuinfo_intel.c
+++ b/src/extract_gpuinfo_intel.c
@@ -64,7 +64,7 @@ static struct gpu_info_intel *gpu_infos;
 // Discrete GPU are others
 #define INTEGRATED_I915_GPU_PCI_ID "0000:00:02.0"
 
-__attribute__((constructor)) static void init_extract_gpuinfo_intel(void) { register_gpu_vendor(&gpu_vendor_intel); }
+void init_extract_gpuinfo_intel(void) { register_gpu_vendor(&gpu_vendor_intel); }
 
 bool gpuinfo_intel_init(void) { return true; }
 void gpuinfo_intel_shutdown(void) {
diff --git a/src/extract_gpuinfo_msm.c b/src/extract_gpuinfo_msm.c
index f05b7fe..b2fa1e5 100644
--- a/src/extract_gpuinfo_msm.c
+++ b/src/extract_gpuinfo_msm.c
@@ -147,7 +147,7 @@ static void authenticate_drm(int fd) {
 #define STRINGIFY(x) STRINGIFY_HELPER_(x)
 #define STRINGIFY_HELPER_(x) #x
 
-__attribute__((constructor)) static void init_extract_gpuinfo_msm(void) { register_gpu_vendor(&gpu_vendor_msm); }
+void init_extract_gpuinfo_msm(void) { register_gpu_vendor(&gpu_vendor_msm); }
 
 bool gpuinfo_msm_init(void) {
   libdrm_handle = dlopen("libdrm.so", RTLD_LAZY);
diff --git a/src/extract_gpuinfo_nvidia.c b/src/extract_gpuinfo_nvidia.c
index c15d31a..50eb2e0 100644
--- a/src/extract_gpuinfo_nvidia.c
+++ b/src/extract_gpuinfo_nvidia.c
@@ -258,7 +258,7 @@ struct gpu_vendor gpu_vendor_nvidia = {
     .name = "NVIDIA",
 };
 
-__attribute__((constructor)) static void init_extract_gpuinfo_nvidia(void) { register_gpu_vendor(&gpu_vendor_nvidia); }
+void init_extract_gpuinfo_nvidia(void) { register_gpu_vendor(&gpu_vendor_nvidia); }
 
 /*
  *
diff --git a/src/extract_gpuinfo_panfrost.c b/src/extract_gpuinfo_panfrost.c
index ef67f5c..5ebc244 100644
--- a/src/extract_gpuinfo_panfrost.c
+++ b/src/extract_gpuinfo_panfrost.c
@@ -59,7 +59,8 @@ static struct gpu_vendor gpu_vendor_panfrost = {
 static struct drmFuncTable drmFuncs;
 static struct mali_gpu_state mali_state;
 
-__attribute__((constructor)) static void init_extract_gpuinfo_panfrost(void) { register_gpu_vendor(&gpu_vendor_panfrost); }
+void init_extract_gpuinfo_panfrost(void);
+void init_extract_gpuinfo_panfrost(void) { register_gpu_vendor(&gpu_vendor_panfrost); }
 
 bool gpuinfo_panfrost_init(void) {
   return mali_init_drm_funcs(&drmFuncs, &mali_state);
diff --git a/src/extract_gpuinfo_panthor.c b/src/extract_gpuinfo_panthor.c
index 0eba82b..e7f33a8 100644
--- a/src/extract_gpuinfo_panthor.c
+++ b/src/extract_gpuinfo_panthor.c
@@ -52,7 +52,8 @@ static struct gpu_vendor gpu_vendor_panthor = {
 static struct drmFuncTable drmFuncs;
 static struct mali_gpu_state mali_state;
 
-__attribute__((constructor)) static void init_extract_gpuinfo_panthor(void) { register_gpu_vendor(&gpu_vendor_panthor); }
+void init_extract_gpuinfo_panthor(void);
+void init_extract_gpuinfo_panthor(void) { register_gpu_vendor(&gpu_vendor_panthor); }
 
 bool gpuinfo_panthor_init(void) {
   return mali_init_drm_funcs(&drmFuncs, &mali_state);
diff --git a/src/extract_gpuinfo_v3d.c b/src/extract_gpuinfo_v3d.c
index c92757c..97e70a2 100644
--- a/src/extract_gpuinfo_v3d.c
+++ b/src/extract_gpuinfo_v3d.c
@@ -90,7 +90,7 @@ struct gpu_vendor gpu_vendor_v3d = {
 unsigned v3d_gpu_count;
 static struct gpu_info_v3d *gpu_infos;
 
-__attribute__((constructor)) static void init_extract_gpuinfo_v3d(void) { register_gpu_vendor(&gpu_vendor_v3d); }
+void init_extract_gpuinfo_v3d(void) { register_gpu_vendor(&gpu_vendor_v3d); }
 
 bool gpuinfo_v3d_init(void) { return true; }
 void gpuinfo_v3d_shutdown(void) {
